name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: halal_deals_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: backend
      run: npm ci
    
    - name: Run linter
      working-directory: backend
      run: npm run lint
    
    - name: Run tests
      working-directory: backend
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/halal_deals_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret

  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: admin-dashboard/package-lock.json
    
    - name: Install dependencies
      working-directory: admin-dashboard
      run: npm ci
    
    - name: Run linter
      working-directory: admin-dashboard
      run: npm run lint
    
    - name: Build
      working-directory: admin-dashboard
      run: npm run build

  mobile-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.0'
    
    - name: Install dependencies
      working-directory: mobile-app
      run: flutter pub get
    
    - name: Run analyzer
      working-directory: mobile-app
      run: flutter analyze
    
    - name: Run tests
      working-directory: mobile-app
      run: flutter test
